{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[5]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}
{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 30
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 30
xvalue("t","t", 2 )
tstop = 30
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.0147361
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0.04
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(27,114)
}
{
save_window_ = new Graph(0)
save_window_.size(0,30,0,1)
scene_vector_[2] = save_window_
{save_window_.view(0, 0, 30, 1, 317, 22, 671.04, 245.44)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addvar("model.a0_brain( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addvar("model.a1_brain( 0.5 )", 4, 1, 0.8, 0.9, 2)
save_window_.addexpr("model.a2_brain( 0.5 )", 2, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,30,0,1)
scene_vector_[3] = save_window_
{save_window_.view(0, 0, 30, 1, 318, 211, 671.04, 160)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addexpr("model.u0_body( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("model.u1_body( 0.5 )", 2, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,30,-0.2,3.7)
scene_vector_[4] = save_window_
{save_window_.view(0, -0.2, 30, 3.9, 318, 432, 666.24, 168.64)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addvar("model.sw_body( 0.5 )", 1, 1, 0.8, 0.9, 2)
}

//Begin VariableTimeStep
{
ocbox_ = NumericalMethodPanel[0]
}
{object_push(ocbox_)}
{
atol_ = 1e-08  CVode[0].atol(atol_)
restore(301, 1)
}
{object_pop()}
{
ocbox_.map("VariableTimeStep", 31, 518, 272.64, 113.28)
}
objref ocbox_
//End VariableTimeStep

objectvar scene_vector_[1]
{doNotify()}
